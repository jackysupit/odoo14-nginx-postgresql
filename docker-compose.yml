version: '3'
services:
  db:
    image: postgres:13
    volumes:
      - ./data/db:/data_db
    ports:
      - 5432:5432/tcp
    environment:
    - POSTGRES_PASSWORD=odoo
    - POSTGRES_USER=odoo
    - POSTGRES_DB=postgres
    - PGDATA=/var/lib/postgresql/data/pgdata
  app:
    build: .
    image: odoo-keluarga-jd:latest
    environment:
    - HOST=db
    - PORT=5432
    - USER=odoo
    - PASSWORD=odoo
    depends_on:
      - db
#    expose:
#      - 8001
#      - 8002
    ports:
      - "8001:8001/tcp"
      - "8002:8002/tcp"
#      - "8069:8069/tcp"
#      - "8071:8071/tcp"
#      - "8072:8072/tcp"
    volumes:
      #this is your project folder, you can put it anywhere and put the full path here
      #as is mine is odooKeluargaJD
      #you need to set this your custom container folder into the /data/app/config/odoo.conf
      - /home/jeki/work/docker/odooDocker/odooKeluargaJD:/odooKeluargaJD
      - ./data/app/files:/var/lib/odoo
      - ./data/app/config:/etc/odoo
      - ./data/app/custom_addons:/mnt/extra-addons
      #this is the odoo source code
#      - /opt/odoo/odoo14:/opt/odoo/odoo14
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/logs:/var/log/nginx
    tty: true
    ports:
      - "80:80"
      - "443:443"
  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
      LOG_LEVEL: debug
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
  portainer:
    #to connect
    #open your browser, go to domain:9000
    #connect to agent:9001
    image: portainer/portainer
    ports:
      - "9000:9000"
      - "8000:8000"
volumes:
  db-data:
    driver: local
  app-data:
    driver: local
